<Window
	x:Class="SeriesTracker.Windows.WindowMainNew" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:converters="clr-namespace:SeriesTracker.Utilities.Converters"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:ViewModels="clr-namespace:SeriesTracker.ViewModels"
	Title="{Binding MyTitle}"
	Icon="../Resources/mainIcon.ico"
	Width="1024" Height="576" MinWidth="1024" MinHeight="576"
	Loaded="Window_Loaded" Activated="Window_Activated"
	Style="{StaticResource STWindow}">
	<Window.DataContext>
		<ViewModels:MainNewViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<converters:VisibilityToBoolConverter x:Key="VisibilityToBoolConv"/>
	</Window.Resources>

	<materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
		<materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
			<materialDesign:DrawerHost.LeftDrawerContent>
				<DockPanel MinWidth="230">
					<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
								  DockPanel.Dock="Top"
								  HorizontalAlignment="Right" Margin="16"
								  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
					<ListBox x:Name="AppMenuListBox" ItemsSource="{Binding AppMenu}">
						<ListBox.ItemTemplate>
							<DataTemplate DataType="ViewModels:HamburgerMenuItem">
								<Grid>
									<StackPanel Orientation="Horizontal" Margin="16 10">
										<materialDesign:PackIcon Kind="{Binding Icon}" Height="30" Width="30" />
										<TextBlock Text="{Binding Description}" VerticalAlignment="Center" Margin="16 0 0 0" />
									</StackPanel>
									<Separator VerticalAlignment="Bottom" />
								</Grid>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</DockPanel>
			</materialDesign:DrawerHost.LeftDrawerContent>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<DataGrid Grid.Row="1"
						  x:Name="view_DataGridView" 
						  ItemsSource="{Binding Collection.View}" 
						  Sorting="DataGrid_Sorting"
						  Visibility="Hidden"
						  MouseDoubleClick="DataGrid_RowDoubleClick">
					<DataGrid.Resources>
						<ContextMenu x:Key="cm_DataGridHeader"
									 ItemsSource="{Binding Columns, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
									 Width="200">
							<ContextMenu.ItemTemplate>
								<DataTemplate>
									<MenuItem Header="{Binding Header}"
											  IsCheckable="True"
											  IsChecked="{Binding Visibility, Converter={StaticResource VisibilityToBoolConv}}"
											  Margin="-30 -7" />
								</DataTemplate>
							</ContextMenu.ItemTemplate>
						</ContextMenu>

						<ContextMenu x:Key="cm_DataGridRow" Opened="DataGrid_ContextMenu_Opened">
							<MenuItem x:Name="View" Header="View" Click="CM_View_Click" />
							<MenuItem x:Name="Update" Header="Update">
								<MenuItem x:Name="UpdateAll" Header="All" Click="CM_UpdateAll_Click"/>
								<MenuItem x:Name="UpdateSelected" Header="Selected" Click="CM_UpdateSelected_Click"/>
							</MenuItem>
							<MenuItem x:Name="SetCategory" Header="Set Category" Click="CM_SetCategory_Click"/>
							<Separator />
							<MenuItem x:Name="Copy" Header="Copy" Click="CM_Copy_Click"/>
							<MenuItem x:Name="Delete" Header="Delete" Click="CM_Delete_Click"/>
							<Separator />
							<MenuItem x:Name="OpenLink" Header="Open Link">
								<MenuItem x:Name="OpenIMDB" Header="IMDB" Click="CM_OpenIMDB_Click"/>
								<MenuItem x:Name="OpenEztv" Header="eztv.it" Click="CM_Eztv_Click"/>
							</MenuItem>
							<MenuItem x:Name="DownloadLastEpisode" Header="Download Last Episode" Click="CM_DownloadLastEpisode_Click"/>
							<MenuItem x:Name="OpenFolder" Header="Open Folder" Click="CM_OpenFolder_Click"/>
							<Separator />
							<MenuItem x:Name="Cancel" Header="Cancel"/>
						</ContextMenu>

						<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
							<Setter Property="ContextMenu" Value="{StaticResource cm_DataGridHeader}" />
						</Style>

						<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
							<Setter Property="ContextMenu" Value="{StaticResource cm_DataGridRow}" />
						</Style>
					</DataGrid.Resources>

					<DataGrid.Columns>
						<DataGridTextColumn Binding="{Binding Id}" Width="75" Header="Tvdb ID" />
						<DataGridTextColumn Binding="{Binding ImdbId}" Width="75" Header="IMDb ID" Visibility="Collapsed" />
						<DataGridTextColumn Binding="{Binding DisplayName}" Width="250" Header="Name" />
						<DataGridTextColumn Binding="{Binding Status}" Width="125" Header="Status" />
						<DataGridTextColumn Binding="{Binding Network}" Width="125" Header="Network" Visibility="Collapsed" />
						<DataGridTextColumn Binding="{Binding Runtime}" Width="125" Header="Run Time" Visibility="Collapsed" />
						<DataGridTextColumn Binding="{Binding GenreDisplay}" Width="125" Header="Genre" Visibility="Collapsed" />
						<DataGridTextColumn Binding="{Binding AirDayDisplay}" Width="125" Header="Air Day" />
						<DataGridTextColumn Binding="{Binding LatestEpisode.FullEpisodeString}" Width="125" Header="Latest Episode" />
						<DataGridTextColumn Binding="{Binding LatestEpisode.FullDateString}" Width="125" Header="Latest Aired" />
						<DataGridTextColumn Binding="{Binding NextEpisodeDisplay}" Width="125" Header="Next Episode" />
						<DataGridTextColumn Binding="{Binding NextEpisodeDateDisplay}" Width="125" Header="Next Aired" />
						<DataGridTextColumn Binding="{Binding HowLongDisplay}" Width="125" Header="How Long" />
						<DataGridTextColumn Binding="{Binding LocalSeriesPath}" Width="250" Header="Local Folder" Visibility="Collapsed" />
					</DataGrid.Columns>
				</DataGrid>

				<ScrollViewer Grid.Row="1"
							  x:Name="view_GridView"
							  Visibility="Hidden">
					<ItemsControl x:Name="view_GridViewItems"
								  ItemsSource="{Binding Collection.View}"
								  Background="{x:Null}"
								  VerticalAlignment="Top">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<UniformGrid Columns="{Binding GridViewColumnCount}" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid>
									<Grid.Triggers>
										<EventTrigger RoutedEvent="MouseEnter">
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="PictureGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
										<EventTrigger RoutedEvent="MouseLeave">
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetName="PictureGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</Grid.Triggers>

									<Image Source="{Binding LocalPicturePath}" />
									<Grid Name="PictureGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0">
										<Grid Background="Black" Opacity="0.8"></Grid>

										<!-- Top -->
										<Label Content="{Binding DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" FontSize="20" />

										<!-- Bottom -->
										<Grid VerticalAlignment="Bottom" Margin="0,0,0,10">
											<Grid.ColumnDefinitions>
												<ColumnDefinition />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>

											<TextBlock Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Status, StringFormat={}Status: {0}}" FontSize="15" />
											<TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NextEpisodeDateDisplay, StringFormat={}Airing: {0}}" FontSize="15" />
										</Grid>
									</Grid>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>

				<materialDesign:ColorZone Grid.Row="0"
										  Mode="PrimaryDark"
										  Padding="16"
										  materialDesign:ShadowAssist.ShadowDepth="Depth2">
					<DockPanel>
						<materialDesign:PopupBox DockPanel.Dock="Right" Margin="20 0 0 0" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
							<StackPanel>
								<TextBlock Margin="15" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" TextTrimming="CharacterEllipsis" Text="{Binding Username}"/>
								<Separator Margin="4,0" />
								<MenuItem ToolTip="View" Header="View">
									<MenuItem.Icon>
										<materialDesign:PackIcon Kind="Account" Opacity="1" />
									</MenuItem.Icon>
								</MenuItem>
								<!--<Button Content="DataGridView" Click="MenuPopupButton_OnClick"/>
								<Button Content="GridView" Click="MenuPopupButton_OnClick"/>
								<Separator />
								<Button Content="Test 1" Click="MenuPopupButton_Test_OnClick"/>-->
							</StackPanel>
						</materialDesign:PopupBox>
						
						<materialDesign:ColorZone Mode="PrimaryDark"
												  DockPanel.Dock="Right"
												  Padding="0"
												  Margin="16 0 0 0"
												  CornerRadius="2"
												  materialDesign:ShadowAssist.ShadowDepth="Depth2"
												  VerticalAlignment="Stretch">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="0">
									<materialDesign:PackIcon Kind="Magnify" Opacity=".6" />
								</Button>
								<TextBox Grid.Column="1"
										 x:Name="txt_FilterText"
										 Margin="8 0 0 0"
										 Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged, Delay=250}"
										 materialDesign:HintAssist.Hint="Search"
										 MinWidth="200"
										 VerticalAlignment="Center" />
								<Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2" Click="ClearFilter_Click">
									<materialDesign:PackIcon Kind="Close" Opacity=".6" Margin="0 0 0 0" />
								</Button>
							</Grid>
						</materialDesign:ColorZone>

						<materialDesign:ColorZone Mode="PrimaryDark"
												  DockPanel.Dock="Right"
												  Padding="8 0"
												  CornerRadius="2"
												  materialDesign:ShadowAssist.ShadowDepth="Depth2"
												  VerticalAlignment="Stretch">
							<ComboBox DockPanel.Dock="Right"
								  ItemsSource="{Binding Categories}"
								  DisplayMemberPath="Name"
								  SelectedValuePath="CategoryID"
								  SelectedItem="{Binding FilterCategory}"
								  materialDesign:ComboBoxAssist.ShowSelectedItem="True"
								  VerticalAlignment="Stretch"
								  Width="150" Height="26">
								<ComboBox.ToolTip>
									<TextBlock>Filter by user list<LineBreak />Add user lists via settings</TextBlock>
								</ComboBox.ToolTip>
							</ComboBox>
						</materialDesign:ColorZone>

						<StackPanel Orientation="Horizontal" materialDesign:RippleAssist.IsCentered="True">
							<ToggleButton x:Name="MenuToggleButton" Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
						</StackPanel>
					</DockPanel>
				</materialDesign:ColorZone>

				<materialDesign:ColorZone Grid.Row="2"
										  Mode="Standard"
										  Padding="16 8"
										  materialDesign:ShadowAssist.ShadowDepth="Depth2"
										  materialDesign:ShadowAssist.ShadowEdges="Top">
					<DockPanel>
						<Label DockPanel.Dock="Left" Style="{StaticResource lbl-default-center-left}" Content="{Binding Status}" />
						<Button DockPanel.Dock="Right" Style="{StaticResource MaterialDesignFlatAccentButton}" Content="{Binding Product}" Command="{Binding HelpCommand}" HorizontalAlignment="Right" />
					</DockPanel>
				</materialDesign:ColorZone>

				<materialDesign:Snackbar Grid.Row="2" MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar" />
			</Grid>
		</materialDesign:DrawerHost>
	</materialDesign:DialogHost>
</Window>