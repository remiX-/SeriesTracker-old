<Window
	x:Class="SeriesTracker.Windows.WindowMain"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:SeriesTracker"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	Title="{Binding MyTitle}"
	Icon="../Resources/mainIcon.ico"
	Width="1024" Height="576" MinWidth="1024" MinHeight="576"
	Loaded="Window_Loaded" SizeChanged="Window_SizeChanged" Closed="Window_Closed" StateChanged="Window_StateChanged" Activated="Window_Activated"
	ResizeMode="CanResizeWithGrip"
	Style="{StaticResource ReWindow}">
	<Window.Resources>
		<local:VisibilityToBoolConverter x:Key="VisibilityToBoolConv"/>
	</Window.Resources>
	<!--
	<Window.RightWindowCommands>
		<mah:WindowCommands>
			<Button Click="Menu_Settings_Click">
				<StackPanel Orientation="Horizontal">
					<iconPacks:PackIconModern Kind="Cog" />
					<TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="settings" />
				</StackPanel>
			</Button>
			<StackPanel VerticalAlignment="Center">
				<ToggleButton x:Name="AccountToggle">
					<StackPanel Orientation="Horizontal">
						<iconPacks:PackIconModern Kind="User" />
						<TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="{Binding UserEmail}" />
					</StackPanel>
				</ToggleButton>
				<Popup SnapsToDevicePixels="True" RenderOptions.ClearTypeHint="Enabled" TextOptions.TextFormattingMode="Ideal"
                       StaysOpen="False" DataContext="{Binding ElementName=AccountToggle}" Width="200"
                       PlacementTarget="{Binding }" Placement="Bottom" VerticalOffset="0" HorizontalOffset="-0" IsOpen="{Binding IsChecked}">
					<Border BorderBrush="{StaticResource ContextMenuBorderBrush}" BorderThickness="1" Background="{StaticResource ContextMenuBackgroundBrush}">
						<StackPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=mah:MetroWindow}}">
							<TextBlock Margin="15" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" TextTrimming="CharacterEllipsis" Text="{Binding Username}"/>
							<Separator Margin="4,0"/>
							<MenuItem Padding="10" ToolTip="View" Header="View" Click="Menu_Account_View_Click">
								<MenuItem.Icon>
									<iconPacks:PackIconModern Kind="User" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Padding="10" ToolTip="Sync" Header="Sync" Click="Menu_Account_Sync_Click">
								<MenuItem.Icon>
									<iconPacks:PackIconModern Kind="User" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Padding="10" ToolTip="Logout" Header="Logout" Click="Menu_Account_Logout_Click">
								<MenuItem.Icon>
									<iconPacks:PackIconModern Kind="LayoutCollapseRightVariant" />
								</MenuItem.Icon>
							</MenuItem>
						</StackPanel>
					</Border>
				</Popup>
			</StackPanel>
			<StackPanel VerticalAlignment="Center">
				<ToggleButton IsChecked="{Binding ElementName=flyoutTest, Path=IsOpen}">
					<StackPanel Orientation="Horizontal">
						<Rectangle Height="20" Width="20">
							<Rectangle.Fill>
								<VisualBrush Visual="{StaticResource appbar_flag}" />
							</Rectangle.Fill>
						</Rectangle>
					</StackPanel>
				</ToggleButton>
			</StackPanel>
		</mah:WindowCommands>
	</mah:MetroWindow.RightWindowCommands>
	-->
	<!--
		<Controls:MetroWindow.Flyouts>
		<Controls:FlyoutsControl>
			<Controls:Flyout x:Name="flyoutTest" Header="Flyout" Position="Right" Width="300">
				<StackPanel Orientation="Vertical">
				</StackPanel>
			</Controls:Flyout>
		</Controls:FlyoutsControl>
	</Controls:MetroWindow.Flyouts>
	-->
	<Grid Margin="10">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="10" />
			<RowDefinition />
			<RowDefinition Height="10" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Menu Grid.Row="0" x:Name="Menu" Margin="0 -10 0 0">
			<MenuItem x:Name="menu_File" Header="_File">
				<MenuItem x:Name="menu_File_Exit" Header="_Exit" Click="Menu_File_Exit_Click" InputGestureText="Alt+F4"/>
			</MenuItem>
			<MenuItem x:Name="menu_Series" Header="_Series">
				<MenuItem x:Name="menu_Series_AddShow" Header="_Add series" Click="Menu_Series_AddShow_Click" InputGestureText="Ctrl+N"/>
				<Separator />
				<MenuItem x:Name="menu_Series_ForceUpdate" Header="F_orce update series" Click="Menu_Series_ForceUpdate_Click" InputGestureText="Ctrl+O"/>
				<MenuItem x:Name="menu_Series_CheckForUpdates" Header="_Check for updates" Click="Menu_Series_CheckForUpdates_Click" InputGestureText="Ctrl+U"/>
				<MenuItem x:Name="menu_Series_CheckShows" Header="Check for new _episodes" Click="Menu_Series_CheckForNewEpisodes_Click" InputGestureText="Ctrl+E"/>
				<Separator />
				<MenuItem x:Name="menu_Series_DetectLocal" Header="Detect _local series paths" Click="Menu_Series_DetectLocal_Click" InputGestureText="Ctrl+L"/>
			</MenuItem>
		</Menu>

		<StackPanel Grid.Row="0" Height="26" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
			<ComboBox ItemsSource="{Binding Categories}" DisplayMemberPath="Name" SelectedValuePath="CategoryID" SelectedItem="{Binding FilterCategory}" VerticalAlignment="Stretch" Width="125">
				<ComboBox.ToolTip>
					<TextBlock>
						Filter by user list
						<LineBreak />Add user lists via settings
					</TextBlock>
				</ComboBox.ToolTip>
			</ComboBox>
			<materialDesign:ColorZone
				Mode="Standard"
				Padding="8 4 8 4"
				CornerRadius="2"
				Panel.ZIndex="1"
				Margin="16 0 0 0"
				materialDesign:ShadowAssist.ShadowDepth="Depth1">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Button Style="{DynamicResource MaterialDesignToolButton}">
						<materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
					</Button>
					<TextBox Grid.Column="1" Margin="8 0 0 0" materialDesign:HintAssist.Hint="Build a search bar" materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0" MinWidth="200" VerticalAlignment="Center" />
					<Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2">
						<materialDesign:PackIcon Kind="Microphone" Opacity=".56" Margin="8 0 0 0" />
					</Button>
				</Grid>
			</materialDesign:ColorZone>
			<!--<TextBox x:Name="txt_FilterText" Margin="10,0,0,0" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged, Delay=250}"
					 VerticalAlignment="Stretch">
				<TextBox.ToolTip>
					<TextBlock>
						Filter criteria
						<LineBreak />Separate each criteria with a space
						<LineBreak />Can filter by all columns
					</TextBlock>
				</TextBox.ToolTip>
				<local:WatermarkService.Watermark>
					<Label VerticalAlignment="Center" Margin="0" Content="Filter series" />
				</local:WatermarkService.Watermark>
			</TextBox>
			<Button ToolTip="Clear filter" Click="ClearFilter_Click">
				<Button.Template>
					<ControlTemplate>
						<iconPacks:PackIconModern Kind="Close" Width="15" Margin="-20,0,0,0" VerticalAlignment="Center" />
					</ControlTemplate>
				</Button.Template>
			</Button>-->

			<Button Margin="10,0,0,0" MouseDown="Image_List_MouseDown" ToolTip="List View">
				<Button.Template>
					<ControlTemplate>
						<!--<iconPacks:PackIconModern Kind="List" Height="26" Width="26" />-->
					</ControlTemplate>
				</Button.Template>
			</Button>
			<Button Margin="10,0,0,0" MouseDown="Image_Detail_MouseDown" ToolTip="Detail View">
				<Button.Template>
					<ControlTemplate>
						<!--<iconPacks:PackIconModern Kind="ListOne" Height="26" Width="26" />-->
					</ControlTemplate>
				</Button.Template>
			</Button>
			<Button Margin="10,0,0,0" MouseDown="Image_Grid_MouseDown" ToolTip="Grid View" >
				<Button.Template>
					<ControlTemplate>
						<!--<iconPacks:PackIconModern Kind="TilesFour" Height="26" Width="26" />-->
					</ControlTemplate>
				</Button.Template>
			</Button>
		</StackPanel>

		<DataGrid Grid.Row="2" x:Name="view_DataGridView" ItemsSource="{Binding Collection.View}" CanUserAddRows="False" CanUserDeleteRows="False"
				  AutoGenerateColumns="False" GridLinesVisibility="Vertical" CanUserResizeRows="False" IsReadOnly="True"
				  VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
				  MouseDoubleClick="DataGrid_RowDoubleClick">
			<DataGrid.Resources>
				<ContextMenu x:Key="cm_DataGridHeader" ItemsSource="{Binding Columns, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" Width="200">
					<ContextMenu.ItemTemplate>
						<DataTemplate>
							<MenuItem Header="{Binding Header}" IsCheckable="True" IsChecked="{Binding Visibility, Converter={StaticResource VisibilityToBoolConv}}" Margin="-30 -7" />
						</DataTemplate>
					</ContextMenu.ItemTemplate>
				</ContextMenu>
				<ContextMenu x:Key="cm_DataGridRow" Opened="DataGrid_ContextMenu_Opened">
					<MenuItem x:Name="View" Header="View" Click="CM_View_Click" />
					<MenuItem x:Name="Update" Header="Update">
						<MenuItem x:Name="UpdateAll" Header="All" Click="CM_UpdateAll_Click"/>
						<MenuItem x:Name="UpdateSelected" Header="Selected" Click="CM_UpdateSelected_Click"/>
					</MenuItem>
					<MenuItem x:Name="SetCategory" Header="Set Category" Click="CM_SetCategory_Click"/>
					<Separator />
					<MenuItem x:Name="Copy" Header="Copy" Click="CM_Copy_Click"/>
					<MenuItem x:Name="Delete" Header="Delete" Click="CM_Delete_Click"/>
					<Separator />
					<MenuItem x:Name="OpenLink" Header="Open Link">
						<MenuItem x:Name="OpenIMDB" Header="IMDB" Click="CM_OpenIMDB_Click"/>
						<MenuItem x:Name="OpenEztv" Header="eztv.it" Click="CM_Eztv_Click"/>
					</MenuItem>
					<MenuItem x:Name="DownloadLastEpisode" Header="Download Last Episode" Click="CM_DownloadLastEpisode_Click"/>
					<MenuItem x:Name="OpenFolder" Header="Open Folder" Click="CM_OpenFolder_Click"/>
					<Separator />
					<MenuItem x:Name="Cancel" Header="Cancel"/>
				</ContextMenu>

				<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
					<Setter Property="ContextMenu" Value="{StaticResource cm_DataGridHeader}" />
				</Style>

				<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
					<Setter Property="ContextMenu" Value="{StaticResource cm_DataGridRow}" />
				</Style>
			</DataGrid.Resources>
			<DataGrid.Columns>
				<DataGridTextColumn Binding="{Binding Id}" Width="75" Header="Tvdb ID" />
				<DataGridTextColumn Binding="{Binding ImdbId}" Width="75" Header="IMDb ID" Visibility="Collapsed" />
				<DataGridTextColumn Binding="{Binding DisplayName}" Width="250" Header="Name" />
				<DataGridTextColumn Binding="{Binding Status}" Width="125" Header="Status" />
				<DataGridTextColumn Binding="{Binding Network}" Width="125" Header="Network" Visibility="Collapsed" />
				<DataGridTextColumn Binding="{Binding Runtime}" Width="125" Header="Run Time" Visibility="Collapsed" />
				<DataGridTextColumn Binding="{Binding GenreDisplay}" Width="125" Header="Genre" Visibility="Collapsed" />
				<DataGridTextColumn Binding="{Binding AirDayDisplay}" Width="125" Header="Air Day" />
				<DataGridTextColumn Binding="{Binding LatestEpisode.FullEpisodeString}" Width="125" Header="Latest Episode" />
				<DataGridTextColumn Binding="{Binding LatestEpisode.FullDateString}" Width="125" Header="Latest Aired" />
				<DataGridTextColumn Binding="{Binding NextEpisodeDisplay}" Width="125" Header="Next Episode" />
				<DataGridTextColumn Binding="{Binding NextEpisodeDateDisplay}" Width="125" Header="Next Aired" />
				<DataGridTextColumn Binding="{Binding HowLongDisplay}" Width="125" Header="How Long" />
				<DataGridTextColumn Binding="{Binding LocalSeriesPath}" Width="250" Header="Local Folder" Visibility="Collapsed" />
			</DataGrid.Columns>
		</DataGrid>

		<ScrollViewer Grid.Row="2" x:Name="view_DetailView" Visibility="Hidden">
			<ItemsControl x:Name="view_DetailViewItems" Margin="0 0 10 0" Background="{x:Null}" VerticalAlignment="Top" ItemsSource="{Binding Collection.View}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<UniformGrid Columns="1" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Border BorderBrush="{DynamicResource AccentBaseColorBrush}" BorderThickness="2" Margin="0 0 0 10" >
							<Grid Height="250" Tag="{Binding UserShowID}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="10"/>
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="10"/>
									<ColumnDefinition Width="200"/>
								</Grid.ColumnDefinitions>

								<Grid Grid.ColumnSpan="7" Background="Black" Opacity="0.30" />

								<Image Grid.Column="0" Source="{Binding LocalPicturePath}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
								
								<StackPanel Grid.Column="2" Margin="10">
									<Label Content="{Binding DisplayName}" Style="{StaticResource lbl-heading}" />
									<StackPanel Orientation="Horizontal">
										<Label Content="Status" Width="100" />
										<Label Content="{Binding Status}" />
									</StackPanel>
									<StackPanel Orientation="Horizontal">
										<Label Content="Latest" Width="100" />
										<Label Content="{Binding LatestEpisode.FullEpisodeString}" />
										<Label Content=" - " />
										<Label Content="{Binding LatestEpisode.FullDateString}" />
									</StackPanel>
									<StackPanel Orientation="Horizontal">
										<Label Content="Next" Width="100" />
										<Label Content="{Binding NextEpisodeDisplay}" />
										<Label Content=" - " />
										<Label Content="{Binding NextEpisodeDateDisplay}" />
									</StackPanel>
								</StackPanel>

								<TextBlock Grid.Column="3" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Overview}" Margin="0 10" />

								<StackPanel Grid.Column="5" Margin="10">
									<Button Content="Open Folder" Click="DetailView_OpenFolder_Click" />
									<Button Content="Download Latest" Click="DetailView_DownloadLatest_Click" Margin="0 10 0 0" />
								</StackPanel>
							</Grid>
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>

		<ScrollViewer Grid.Row="2" x:Name="view_GridView" Visibility="Hidden">
			<ItemsControl x:Name="view_GridViewItems" Margin="0 0 10 0" Background="{x:Null}" VerticalAlignment="Top" ItemsSource="{Binding Collection.View}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<UniformGrid Columns="{Binding GridViewColumnCount}" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.Triggers>
								<EventTrigger RoutedEvent="MouseEnter">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PictureGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseLeave">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PictureGrid" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Grid.Triggers>

							<Image Source="{Binding LocalPicturePath}" />
							<Grid Name="PictureGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0">
								<Grid Background="Black" Opacity="0.8"></Grid>

								<!-- Top -->
								<Label Content="{Binding DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" FontSize="20" />

								<!-- Bottom -->
								<Grid VerticalAlignment="Bottom" Margin="0,0,0,10">
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>

									<TextBlock Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Status, StringFormat={}Status: {0}}" FontSize="15" />
									<TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NextEpisodeDateDisplay, StringFormat={}Airing: {0}}" FontSize="15" />
								</Grid>
							</Grid>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>

		<Grid Grid.Row="2" x:Name="Overlay" Background="#CC000000" Visibility="Hidden">
			<Label x:Name="lbl_OverlayText" Content="Loading ..." Foreground="#FF959595" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center"/>
		</Grid>

		<StackPanel x:Name="TESTPANEL" Grid.Row="4" Orientation="Horizontal" Margin="0" Visibility="Visible">
			<TextBox x:Name="txt_Test" />
			<Button x:Name="btn_Test1" Content="Test 1" Margin="10,0,0,0" Click="Btn_Test1_Click"/>
			<Button x:Name="btn_Test2" Content="Test 2" Margin="10,0,0,0" Click="Btn_Test2_Click"/>
		</StackPanel>

		<Label Grid.Row="4" Style="{StaticResource lbl-default-center-right}" Content="{Binding Product}" />
	</Grid>
</Window>